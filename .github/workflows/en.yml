name: Renew data on azurlane-dataset

on:
  push:
    branches:
      - dump
      # there may be additions to a script
      - master

jobs:
  LuaHelper_preparation:
    name: Preparing LuaHelper
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      name: Checkout LuaHelper
      with:
        repository: azurlane-tools/Azur-Lane-LuaHelper
        path: LuaHelper
    - name: Caching build
      id: cache-luahelper
      uses: actions/cache@v1
      with:
        path: LuaHelper/Azur-Lane-LuaHelper/bin/Release/Azurlane.exe
        key: ${{ runner.os }}-${{ hashFiles('LuaHelper/Azur-Lane-LuaHelper.sln') }}
    - name: Compiling LuaHelper
      if: steps.cache-luahelper.outputs.cache-hit != 'true'
      run: |
        cd LuaHelper/
        msbuild Azur-Lane-LuaHelper.sln /t:Build /p:Configuration=Release 
    - name: Publishing as artifact
      uses: actions/upload-artifact@v1
      with:
        name: AzurLaneLuaHelper.zip
        path: LuaHelper/Azur-Lane-LuaHelper/bin/Release/Azurlane.exe
  scripts_decrypt:
    name: Decrypting scripts bundle
    runs-on: ubuntu-latest
    needs: [LuaHelper_preparation]
    steps:
      - uses: actions/download-artifact@v1
        name: Download LuaHelper
        with:
          name: AzurLaneLuaHelper.zip
          path: ${{ runner.temp }}
      - uses: actions/checkout@v2
        with:
          repository: minhducsun2002/azurlane-gamedata
          persist-credentials: false
          ref: dump
          path: azurlane-dump/
      - name: Decrypting scripts
        run: |
          mono $RUNNER_TEMP/Azurlane.exe --decrypt azurlane-dump/EN/scripts32
          mono $RUNNER_TEMP/Azurlane.exe --decrypt azurlane-dump/EN/scripts64
      - name: Publishing decrypted asset bundle (32)
        uses: actions/upload-artifact@v1
        with:
          name: EN.scripts32.zip
          path: azurlane-dump/EN/scripts32
      - name: Publishing decrypted asset bundle (64)
        uses: actions/upload-artifact@v1
        with:
          name: EN.scripts64.zip
          path: azurlane-dump/EN/scripts64
  extracting_bundle:
    name: Extracting scripts bundle
    runs-on: ubuntu-latest
    needs: [scripts_decrypt]
    steps:
      - name: Preparing Python environment
        run: |
          sudo pip3 install wheel --quiet
          sudo pip3 install setuptools --quiet
          sudo pip3 install UnityPy decrunch pvrtc_decoder astc_decomp --quiet
      - uses: actions/download-artifact@v1
        name: Loading decrypted bundles (32)
        with:
          name: EN.scripts32.zip
          path: ${{ runner.temp }}/assets
      - name: Checkout utils
        uses: actions/checkout@v2
        with:
          path: utils
      - name: Extracting bundle
        run: python3 $GITHUB_WORKSPACE/utils/TextAssetExtract.py $RUNNER_TEMP/assets/ $RUNNER_TEMP/extract/
      - name: Publishing extracted bundle (32)
        uses: actions/upload-artifact@v1
        with:
          name: scripts32-extracted.zip
          path: ${{ runner.temp }}/extract/android
  luajit_decompile:
    name: Decompiling LuaJIT bytecode
    runs-on: ubuntu-latest
    needs: [extracting_bundle]
    steps:
      - uses: actions/checkout@v2
        name: Checkout LJD
        with:
          repository: azurlane-tools/luajit-decompiler
          path: ljd
      - uses: actions/download-artifact@v1
        name: Loading extracted bundles (32)
        with:
          name: scripts32-extracted.zip
          path: ${{ runner.temp }}/extracted
      - name: Decompiling
        run: python3 ljd/main.py -r $RUNNER_TEMP/extracted/normal -d $RUNNER_TEMP/decompiled/ -c -l
      - name: Publishing decompiled scripts (32)
        uses: actions/upload-artifact@v1
        with:
          name: scripts32-decompiled.zip
          path: ${{ runner.temp }}/decompiled
  json:
    name: Compiling results into consumable JSONs
    runs-on: ubuntu-latest
    needs: [luajit_decompile]
    steps:
      - name: Checkout utils
        uses: actions/checkout@v2
        with:
          path: utils
      - name: Checkout util submodules
        run: |
          cd utils/
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Downloading decompiled scripts (32)
        uses: actions/download-artifact@v1
        with:
          name: scripts32-decompiled.zip
          path: ${{ runner.temp }}/decompiled
      - name: Preparing environments
        run: |
          sudo apt-get install -qq lua5.3 > /dev/null
          cp -r utils/lua-extractor $RUNNER_TEMP/
      - name: Extracting ship stats
        run: |
          cd $RUNNER_TEMP/lua-extractor
          mkdir -p $DATA_EXTRACT
          lua5.3 ship_data_statistics.lua $RUNNER_TEMP/decompiled/sharecfg/ship_data_statistics.lua > $DATA_EXTRACT/ship_data_statistics.json
          lua5.3 fleet_tech_group.lua $RUNNER_TEMP/decompiled/sharecfg/fleet_tech_group.lua > $DATA_EXTRACT/fleet_tech_group.json
          lua5.3 fleet_tech_ship_class.lua $RUNNER_TEMP/decompiled/sharecfg/fleet_tech_ship_class.lua > $DATA_EXTRACT/fleet_tech_ship_class.json
          lua5.3 skill_data_display.lua $RUNNER_TEMP/decompiled/sharecfg/skill_data_display.lua > $DATA_EXTRACT/skill_data_display.json
        env:
          DATA_EXTRACT: ${{ runner.temp }}/jsons
      - name: Publishing JSONs (32)
        uses: actions/upload-artifact@v1
        with:
          name: gamedata.zip
          path: ${{ runner.temp }}/jsons
  publishing:
    name: Publish to repositories
    runs-on: ubuntu-latest
    needs: [json]
    steps:
      - name: Prepare environment
        run: |
          npm install -g https://github.com/cipherallies/gh-latest-sha
